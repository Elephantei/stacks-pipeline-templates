parameters:
  package_feed: ''
  nuget_service_connection: ''
  publish_symbols: true
  publish_public: false

steps:
  # Publish Nuget packages
  - script: echo "${{ parameters.publish_public }}"
  - script: echo "${{ parameters.nuget_service_connection }}"

  - ${{ if eq(parameters.publish_public, true) }}:
    - task: DotNetCoreCLI@2
      displayName: 'Publish: Push Packages'
      inputs:
        command: push
        nugetFeedType: 'external'
        externalEndPoint: ${{ parameters.nuget_service_connection }}

  - ${{ if ne(parameters.publish_public, true) }}:
    - task: DotNetCoreCLI@2
      displayName: 'Publish: Push Packages'
      inputs:
        command: push
        publishVstsFeed: ${{ parameters.package_feed }}
  
  # - task: DotNetCoreCLI@2
  #   displayName: 'Publish: Push Packages'
  #   inputs:
  #     command: push
  #     ${{ if eq(parameters.publish_public, true) }}:
  #       nugetFeedType: 'external'
  #       externalEndPoint: ${{ parameters.nuget_service_connection }}
  #     ${{ if ne(parameters.publish_public, true) }}:
  #       publishVstsFeed: ${{ parameters.package_feed }}

  # Publish Symbols
  - task: PublishSymbols@2
    displayName: 'Publish: Push Symbols'
    inputs:
      searchPattern: '**/bin/**/*.pdb'
      publishSymbols: ${{ parameters.publish_symbols }}
      symbolServerType: teamServices
      workingDirectory: '$(Package.Path)'
