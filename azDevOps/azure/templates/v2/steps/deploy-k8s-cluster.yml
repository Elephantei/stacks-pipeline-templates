parameters:
  aks_cluster_name: ""
  aks_resource_group_name: ""
  aks_dns_resource_group_name: ""
  aks_set_acr_perms: false
  acr_name: ""
  acr_resource_group_name: ""
  ingress_definition: []
  scripts_dir: ""
  external_dns_yml: ""
  base_external_dns_yml: ""
  domain_filter: ""

steps:
  # Do Login
  - bash: |
      az -v
      az login --service-principal --username $(azure_client_id) --password $(azure_client_secret) --tenant $(azure_tenant_id)
      az account set -s $(azure_subscription_id)
      az aks get-credentials --overwrite-existing --resource-group ${{ parameters.aks_resource_group_name }} --name ${{ parameters.aks_cluster_name }}

    displayName: "K8s: Login AKS"
    env:
      AZURE_CLOUD_NAME: AzureCloud
      # ARM_SUBSCRIPTION_ID: $(azure_subscription_id)
      # ARM_CLIENT_ID: $(azure_client_id)
      # ARM_CLIENT_SECRET: $(azure_client_secret)
      # ARM_TENANT_ID: $(azure_tenant_id)

  - template: ./login-services.yml
    parameters:
      # Azure
      login_azure: true
      azure_tenant_id: "$(azure_tenant_id)"
      azure_subscription_id: "$(azure_subscription_id)"
      azure_client_id: "$(azure_client_id)"
      azure_client_secret: "$(azure_client_secret)"
      # Kubernetes
      login_kubernetes: true
      aks_resource_group_name: "${{ parameters.aks_resource_group_name }}"
      aks_cluster_name: "${{ parameters.aks_cluster_name }}"
      aks_set_acr_perms: ${{ parameters.aks_set_acr_perms }}
      acr_name: ${{ parameters.acr_name }}
      acr_resource_group_name: ${{ parameters.acr_resource_group_name }}


  - ${{ each ingress in parameters.ingress_definition }}:
      - bash: |
          echo $FOO
          kubectl apply -f ${{ ingress }} --context ${{ parameters.aks_cluster_name }}
        displayName: "K8s: Deploy Ingress-Nginx"
        workingDirectory: ${{ parameters.terraform_working_dir }}
        env:
          FOO: BAR

  - bash: |
      echo $(pwd)
      echo ${{ parameters.base_external_dns_yml }}
      ls -lat ${{ parameters.base_external_dns_yml }}
      ./yaml-templating.sh ${{ parameters.base_external_dns_yml }} ${{ parameters.external_dns_yml }}
    env:
      domain_filter: ${{ parameters.domain_filter }}
      aks_resource_group: ${{ parameters.aks_resource_group_name }}
    displayName: "K8s: template external dns"
    workingDirectory: ${{ parameters.scripts_dir }}

  - bash: |
      ./external-dns.sh ${{ parameters.aks_resource_group_name }} \
      ${{ parameters.aks_cluster_name }} \
      ${{ parameters.aks_dns_resource_group_name }} \
      ${{ parameters.external_dns_yml }}
    displayName: "K8s: Deploy External DNS service"
    workingDirectory: ${{ parameters.scripts_dir }}
    env:
      ARM_SUBSCRIPTION_ID: $(azure_subscription_id)
      ARM_CLIENT_ID: $(azure_client_id)
      ARM_CLIENT_SECRET: $(azure_client_secret)
      ARM_TENANT_ID: $(azure_tenant_id)

  - bash: |
      kubectl apply -f https://raw.githubusercontent.com/Azure/aad-pod-identity/master/deploy/infra/deployment-rbac.yaml --context ${{ parameters.aks_cluster_name }}
      kubectl apply -f $(Agent.BuildDirectory)/s/stacks-webapp-template/packages/template-cli/templates/build/azDevops/azure/k8s_manifests/aadpodidentity.yml --context ${{ parameters.aks_cluster_name }}
      kubectl apply -f $(Agent.BuildDirectory)/s/stacks-webapp-template/packages/template-cli/templates/build/azDevops/azure/k8s_manifests/aadpodidentitybinding.yml --context ${{ parameters.aks_cluster_name }}
    displayName: "K8s: Deploy AAD pod identity"
    workingDirectory: ${{ parameters.scripts_dir }}
    env:
      ARM_SUBSCRIPTION_ID: $(azure_subscription_id)
      ARM_CLIENT_ID: $(azure_client_id)
      ARM_CLIENT_SECRET: $(azure_client_secret)
      ARM_TENANT_ID: $(azure_tenant_id)

  - bash: |
      kubectl apply -f https://raw.githubusercontent.com/open-policy-agent/gatekeeper/master/deploy/gatekeeper.yaml --context ${{ parameters.aks_cluster_name }}
    displayName: "K8s: Deploy Gatekeeper"
    workingDirectory: ${{ parameters.scripts_dir }}
    env:
      ARM_SUBSCRIPTION_ID: $(azure_subscription_id)
      ARM_CLIENT_ID: $(azure_client_id)
      ARM_CLIENT_SECRET: $(azure_client_secret)
      ARM_TENANT_ID: $(azure_tenant_id)
