parameters:
  environment: ''
  terraform_artefact_name: ''
  devops_artefact_name: ''
  terraform_output_artefact: ''
  #  State Config
  terraform_state_rg: ''
  terraform_state_storage: ''
  terraform_state_container: ''
  terraform_state_key: ''
  terraform_state_workspace: ''
  company: ''
  project: ''
  # Azure Config
  location: ''
  tags: ''
  #  DNS
  DNS_create: ''
  DNS_zone: ''
  # Cluster Config
  Cluster_version: ''
  Cluster_nodeCount: ''
  Cluster_spn_create: ''
  # Ingress Config
  IngressNamespace: ''
  # SSL
  DefaultCertImportfromBlob: true
  BlobCertTLSkeyfile: ''
  BlobCertTLScrtfile: ''
  BlobCertCAfile: ''
  DefaultCertSecretNameSpace: ''
  DefaultCertSecretName: ''
  BlobCertRG: ''
  BlobCertStorageAccount: ''
  BlobCertStorageContainer: ''

jobs:
- deployment: infrastructure
  environment: ${{ parameters.environment }}

  pool:
    vmImage: 'ubuntu-latest'

  strategy:
    runOnce:
      deploy:
        steps:

        - download: current
          displayName: 'Download: Terraform Artefacts'
          artifact: ${{ parameters.terraform_artefact_name }}

        - download: current
          displayName: 'Download: DevOps Artefacts'
          artifact: ${{ parameters.devops_artefact_name }}

        - task: Bash@3
          displayName: 'Download: CI/CD Prerequisites'
          inputs:
            targetType: 'filePath'
            filePath: $(Pipeline.Workspace)/${{ parameters.devops_artefact_name }}/Bootstrap/install-cicd-prereqs.sh
            arguments: $(Build.BinariesDirectory)/kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v2.0.3/kustomize_2.0.3_linux_amd64

        - task: Bash@3
          displayName: 'Login: Azure'
          inputs:
            targetType: 'filePath'
            filePath: $(Pipeline.Workspace)/${{ parameters.devops_artefact_name }}/Azure/set-azure-context.sh
            arguments: $(azure_tenant_id) $(azure_subscription_id) $(azure_client_id) $(azure_client_secret)
            failOnStderr: true 

        - template: ../steps/deploy-aks-terraform.yml
          # Terraform Backend & Azure Credential config comes via Variable Group
          # that must be inherited into this step! 
          parameters:
            #  Terraform Config
            terraform_artefact_path: $(Pipeline.Workspace)/${{ parameters.terraform_artefact_name }} 
            terraform_output_artefact: ${{ parameters.terraform_output_artefact }} 
            # Terraform State Config (Must already exist!)
            terraform_state_rg: ${{ parameters.terraform_state_rg }}
            terraform_state_storage: ${{ parameters.terraform_state_storage }}
            terraform_state_container: ${{ parameters.terraform_state_container }}
            terraform_state_key: ${{ parameters.terraform_state_key }}
            terraform_state_workspace: ${{ parameters.terraform_state_workspace }}
            company: ${{ parameters.company }}
            project: ${{ parameters.project }}
            # Azure Config
            environment: ${{ parameters.environment }} 
            location: ${{ parameters.location }} 
            tags: ${{ parameters.tags }} 
            # DNS Config
            DNS_create: ${{ parameters.DNS_create }} 
            DNS_suffix: ${{ parameters.DNS_zone }} 
            # Cluster Config
            Cluster_version: ${{ parameters.Cluster_version }} 
            Cluster_nodeCount: ${{ parameters.Cluster_nodeCount }} 
            Cluster_spn_create: ${{ parameters.Cluster_spn_create }} 

        - task: Bash@3
          displayName: 'Login: Kubernetes'
          inputs:
            targetType: 'filePath'
            filePath: $(Pipeline.Workspace)/${{ parameters.devops_artefact_name }}/Azure/set-aks-context.sh
            # These variables are generated by the output of the deploy-aks-terraform step above
            arguments: $(tfoutputs.AKS_CLUSTER_RG) $(tfoutputs.AKS_CLUSTER_NAME)

        # Bootstrap Cluster
        - template: ../steps/deploy-aks-bootstrap.yml
          parameters:
            # Basic Config
            aks_cluster_name: $(tfoutputs.AKS_CLUSTER_NAME)
            aks_cluster_rg: $(tfoutputs.AKS_CLUSTER_RG)
            devops_package_path: '$(Pipeline.Workspace)/${{ parameters.devops_artefact_name }}'
            # Ingress Configuration
            IngressNamespace: ${{ parameters.IngressNamespace }}
            DefaultDNSZone: ${{ parameters.DNS_zone }}
            # SSL
            DefaultCertImportfromBlob: ${{ parameters.DefaultCertImportfromBlob }}
            BlobCertTLSkeyfile: ${{ parameters.BlobCertTLSkeyfile }}
            BlobCertTLScrtfile: ${{ parameters.BlobCertTLScrtfile }}
            BlobCertCAfile: ${{ parameters.BlobCertCAfile }}
            DefaultCertSecretNameSpace: ${{ parameters.DefaultCertSecretNameSpace }}
            DefaultCertSecretName: ${{ parameters.DefaultCertSecretName }}
            BlobCertRG: ${{ parameters.BlobCertRG }}
            BlobCertStorageAccount: ${{ parameters.BlobCertStorageAccount }}
            BlobCertStorageContainer: ${{ parameters.BlobCertStorageContainer }}